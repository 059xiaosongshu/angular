import { CodegenInjector } from 'angular2/src/core/linker/injector_factory';
import { BaseException } from 'angular2/src/facade/exceptions';
export class InterpretiveInjectorInstanceFactory {
    createInstance(superClass, clazz, args, props, getters, methods) {
        if (superClass === CodegenInjector) {
            return new _InterpretiveInjector(args, clazz, props, getters, methods);
        }
        throw new BaseException(`Can't instantiate class ${superClass} in interpretative mode`);
    }
}
class _InterpretiveInjector extends CodegenInjector {
    constructor(args, clazz, props, getters, methods) {
        super(args[0], args[1], args[2]);
        this.clazz = clazz;
        this.props = props;
        this.getters = getters;
        this.methods = methods;
    }
    getInternal(token, notFoundResult) {
        var m = this.methods.get('getInternal');
        return m(token, notFoundResult);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJwcmV0aXZlX2luamVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGlmZmluZ19wbHVnaW5fd3JhcHBlci1vdXRwdXRfcGF0aC1ZODdXMzRUdC50bXAvYW5ndWxhcjIvc3JjL2NvbXBpbGVyL291dHB1dC9pbnRlcnByZXRpdmVfaW5qZWN0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSwyQ0FBMkM7T0FDbEUsRUFBQyxhQUFhLEVBQUMsTUFBTSxnQ0FBZ0M7QUFJNUQ7SUFDRSxjQUFjLENBQUMsVUFBZSxFQUFFLEtBQVUsRUFBRSxJQUFXLEVBQUUsS0FBdUIsRUFDakUsT0FBOEIsRUFBRSxPQUE4QjtRQUMzRSxFQUFFLENBQUMsQ0FBQyxVQUFVLEtBQUssZUFBZSxDQUFDLENBQUMsQ0FBQztZQUNuQyxNQUFNLENBQUMsSUFBSSxxQkFBcUIsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDekUsQ0FBQztRQUNELE1BQU0sSUFBSSxhQUFhLENBQUMsMkJBQTJCLFVBQVUseUJBQXlCLENBQUMsQ0FBQztJQUMxRixDQUFDO0FBQ0gsQ0FBQztBQUVELG9DQUFvQyxlQUFlO0lBQ2pELFlBQVksSUFBVyxFQUFTLEtBQVUsRUFBUyxLQUF1QixFQUN2RCxPQUE4QixFQUFTLE9BQThCO1FBQ3RGLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUZILFVBQUssR0FBTCxLQUFLLENBQUs7UUFBUyxVQUFLLEdBQUwsS0FBSyxDQUFrQjtRQUN2RCxZQUFPLEdBQVAsT0FBTyxDQUF1QjtRQUFTLFlBQU8sR0FBUCxPQUFPLENBQXVCO0lBRXhGLENBQUM7SUFDRCxXQUFXLENBQUMsS0FBVSxFQUFFLGNBQW1CO1FBQ3pDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3hDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7QUFDSCxDQUFDO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvZGVnZW5JbmplY3Rvcn0gZnJvbSAnYW5ndWxhcjIvc3JjL2NvcmUvbGlua2VyL2luamVjdG9yX2ZhY3RvcnknO1xuaW1wb3J0IHtCYXNlRXhjZXB0aW9ufSBmcm9tICdhbmd1bGFyMi9zcmMvZmFjYWRlL2V4Y2VwdGlvbnMnO1xuXG5pbXBvcnQge0luc3RhbmNlRmFjdG9yeSwgRHluYW1pY0luc3RhbmNlfSBmcm9tICcuL291dHB1dF9pbnRlcnByZXRlcic7XG5cbmV4cG9ydCBjbGFzcyBJbnRlcnByZXRpdmVJbmplY3Rvckluc3RhbmNlRmFjdG9yeSBpbXBsZW1lbnRzIEluc3RhbmNlRmFjdG9yeSB7XG4gIGNyZWF0ZUluc3RhbmNlKHN1cGVyQ2xhc3M6IGFueSwgY2xheno6IGFueSwgYXJnczogYW55W10sIHByb3BzOiBNYXA8c3RyaW5nLCBhbnk+LFxuICAgICAgICAgICAgICAgICBnZXR0ZXJzOiBNYXA8c3RyaW5nLCBGdW5jdGlvbj4sIG1ldGhvZHM6IE1hcDxzdHJpbmcsIEZ1bmN0aW9uPik6IGFueSB7XG4gICAgaWYgKHN1cGVyQ2xhc3MgPT09IENvZGVnZW5JbmplY3Rvcikge1xuICAgICAgcmV0dXJuIG5ldyBfSW50ZXJwcmV0aXZlSW5qZWN0b3IoYXJncywgY2xhenosIHByb3BzLCBnZXR0ZXJzLCBtZXRob2RzKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oYENhbid0IGluc3RhbnRpYXRlIGNsYXNzICR7c3VwZXJDbGFzc30gaW4gaW50ZXJwcmV0YXRpdmUgbW9kZWApO1xuICB9XG59XG5cbmNsYXNzIF9JbnRlcnByZXRpdmVJbmplY3RvciBleHRlbmRzIENvZGVnZW5JbmplY3Rvcjxhbnk+IGltcGxlbWVudHMgRHluYW1pY0luc3RhbmNlIHtcbiAgY29uc3RydWN0b3IoYXJnczogYW55W10sIHB1YmxpYyBjbGF6ejogYW55LCBwdWJsaWMgcHJvcHM6IE1hcDxzdHJpbmcsIGFueT4sXG4gICAgICAgICAgICAgIHB1YmxpYyBnZXR0ZXJzOiBNYXA8c3RyaW5nLCBGdW5jdGlvbj4sIHB1YmxpYyBtZXRob2RzOiBNYXA8c3RyaW5nLCBGdW5jdGlvbj4pIHtcbiAgICBzdXBlcihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgfVxuICBnZXRJbnRlcm5hbCh0b2tlbjogYW55LCBub3RGb3VuZFJlc3VsdDogYW55KTogYW55IHtcbiAgICB2YXIgbSA9IHRoaXMubWV0aG9kcy5nZXQoJ2dldEludGVybmFsJyk7XG4gICAgcmV0dXJuIG0odG9rZW4sIG5vdEZvdW5kUmVzdWx0KTtcbiAgfVxufVxuIl19